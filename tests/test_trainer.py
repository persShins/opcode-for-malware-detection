import pytest
import shutil
import data_loader.data_loaders as module_data
import model.model as module_arch
import model.metric as module_metric
from utils import read_conf
from trainer import SklearnTrainer
from parse_config import ConfigParser
from pathlib import Path


@pytest.fixture(scope='session')
def setup_config():
    conf_fpath = 'tests/sklearn_config.yaml'
    config = read_conf(conf_fpath)
    config = ConfigParser(config=config)
    return config


class TestMalwareDetectionTrainer:
    def test_sklearn_trainer(self, setup_config, setup_logger):
        self.remove_existed_folder()
        
        config = setup_config
        logger = setup_logger
        data_loader = config.init_obj('data_loader', module_data, 
                                logger=logger, save_dir='tests/passage')
        dataset = data_loader.dataset.embed_passage
        
        model = config.init_obj('arch', module_arch)
        metrics = [getattr(module_metric, met) for met in config['metrics']]
        
        trainer = SklearnTrainer(
            model=model,
            metric_ftns=metrics,
            config=config,
            dataset=dataset
        )
        
        trainer.train()
        
    @staticmethod
    def remove_existed_folder():
        test_path = Path('tests')
        mlflow_dir = test_path / 'mlflow'
        if mlflow_dir.exists():
            shutil.rmtree(mlflow_dir)
            
        passage_dir = test_path / 'passage'
        if passage_dir.exists():
            shutil.rmtree(passage_dir)