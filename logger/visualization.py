import sys
import importlib
from pathlib import Path



class MLflowWriter(object):
    def __init__(self, exper_name, run_id, logger, mlflow_dir):
        self.writer = None
        self.selected_module = ""
        self.exper_name = exper_name
        self.run_id = run_id
        self.mlflow_dir = mlflow_dir
        
        # Retrieve mlflow
        module = 'mlflow'
        succeed = False
        try:
            self.writer = importlib.import_module(module)
            succeed = True
        except ImportError:
            succeed = False
        self.selected_module = module
        
        if not succeed:
            message = "Warning: mlflow is configured to use, but currently not installed on " \
                "this machine. Please install mlflow with 'pip install mlflow' to use mlflow or " \
                "turn off the option in the 'config.yaml' file."
            logger.warning(message)
            sys.exit(-1)
                    
        # set tracking server url.
        mlflow_dir = Path(f'{mlflow_dir}/mlflow')
        mlflow_dir.mkdir(parents=True, exist_ok=True)
        tracking_url = 'file://' + str(mlflow_dir.absolute())
        self.writer.set_tracking_uri(tracking_url)
        
        # set experiment, run_id.
        try:
            exper_id = self.writer.create_experiment(self.exper_name)
            exper = self.writer.get_experiment(exper_id)
        except:
            message = "Warning: experiment {} is already exists.".format(self.exper_name)
            logger.warning(message)
            
            exper = self.writer.set_experiment(experiment_name=self.exper_name)
            exper_id = exper.experiment_id
        
        run = self.writer.start_run(experiment_id=exper_id, run_name=self.run_id)
        print(run)
        
    def __getattr__(self, *args):
        try:
            attr = getattr(self.writer, *args)
        except AttributeError:
            raise AttributeError("type object '{}' has no attribute '{}'".format(self.selected_module, args))
        
        return attr
            
            
            